<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--    spring对bean的管理细节
            1.创建bean的三种方式：
                （1）适用默认构造函数创建：
                    在spring配置文件中适用bean标签，配置id和class，无其他标签。必须要有默认构造函数
                （2）适用普通工厂中的方法创建对象（使用某个类中的方法创建对象，放入spring）
                （3）适用工厂中的静态方法创建对象，类中的静态方法存入spring
            2.bean对象的作用范围
                bean标签的scope属性：
                    singleton:单例（默认）
                    prototype:多例
                    request:作用于web应用的请求范围
                    session:web回话范围
                    global-session:集群环境的会话范围（全局），不是集群既是session

            3.bean对象的生命周期
              单例对象：
                  出生：当容器创建时，对象出生
                  活着：只要容器还在，对象一直活
                  死亡：容器销毁
                <bean id="accountService" class="com.zhaoxin.spring.service.impl.AccountServiceImpl"
                    init-method="saveAccount" destroy-method="saveAccount"/>

               多例对象：
                 出生：使用时才通过spring创建
                 活着：只要使用中 就一直活着
                 死亡：当对象长时间不用且没有别的对象使用时java的垃圾回收器回收
    />
    -->
    <bean id="accountService" class="com.zhaoxin.spring.service.impl.AccountServiceImpl"
        init-method="saveAccount" destroy-method="saveAccount"/>
    <bean id="accountDao" class="com.zhaoxin.spring.dao.impl.AccountDaoImpl"/>

    <bean id="instanceFactory" class="com.zhaoxin.spring.client.InstanceFactory"/>
    <bean id="accountService1" factory-bean="instanceFactory" factory-method="getAccountService"/>


    <bean id="accountService2" class="com.zhaoxin.spring.client.StaticFactory" factory-method="getAccountService"/>


</beans>